# Oh My Zsh
export ZSH=$HOME/.oh-my-zsh

plugins=(kubectl autojump)

ZSH_THEME="simple"

export EDITOR=nvim

# Load profile first
[ -f ~/.profile ] && source ~/.profile

# Source environment variables
[ -f ~/.env/secret ] && source ~/.env/secret

source $ZSH/oh-my-zsh.sh

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
else
  export EDITOR='nvim'
fi

# Export variables in file to current shell
function exportvars() {
  file=$1

  set -o allexport
  source $file
  set +o allexport
}

# Supported variables
# $DB_DEFAULT - default database
# $DB_PASSWORD - password
# $DB_HOST - hostname
# $DB_USER - username
function mydbenv () {
  prog=$1
  shift

  env=$1
  shift

  # Don't expose variables exported via `export` call
  (
  exportvars $env &&
    $prog -u$DB_USER -p$DB_PASSWORD -P$DB_PORT -h$DB_HOST $DB_DEFAULT $@
  )
}

function cproj() {
  $1; cd $1; tmux -2 new -s $1 || tmux -2 a -t $1
}

# Mysql utils Alias
alias mysqldumpenv="mydbenv mysqldump"
alias mysqlenv="mydbenv mysql"
alias myclienv="mydbenv mycli"

# Aliases
# Git alias
alias g="git"
alias Gstatus="git status"
alias Gpull="git pull"
alias Gpush="git push"
alias Gcommit="git commit"

# fzf vim
alias vimf='vim `fzf`'

# Dotenv
function de () {
  file=$1
  shift

  (exportvars $file; $@)
}

# Xclip
alias xclipc="xclip -sel clip"

# Use python 3
alias python='/usr/bin/python3'
alias pip='/usr/bin/python3 -m pip'

# Date now Reverse timestamp
alias datenow="date +%Y%m%d%H%M"
alias today="date +%Y%m%d"

# Utils
alias whatismyip="curl -s http://ifconfig.me/ip"
alias randimg='echo `curl -Ls -o /dev/null -w %{url_effective} http://source.unsplash.com/random/1000x654`'

# bypass zsh glob pattern
unsetopt nomatch

# fzf - enable fuzzy file search bindings
if [ ! -d ~/.fzf ]; then
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install
fi
source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='ag -g ""'
export FZF_DEFAULT_OPTS="--ansi --preview-window 'top:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}'"

# Merge ~/.Xresources
if hash xrdb 2>/dev/null; then
  xrdb -merge ~/.Xresources
fi

# User path configurations
PATH="$PATH:$HOME/.deno/bin:$HOME/.local/bin"

LOCAL_SHARE_DIR=$HOME/.local/share
NODE_MODULES=$LOCAL_SHARE_DIR/node_modules
if [ -d $NODE_MODULES ]; then
  PATH="$NODE_MODULES/.bin:$PATH"

  # Install local packages
  alias npml="npm i --prefix $HOME/.local/share"
fi

GEM=$HOME/.gem
RUBY_VERSION=2.6.0
if [ -d $GEM ]; then
  PATH="$GEM/ruby/$RUBY_VERSION/bin:$PATH"
else
  echo "Warning! Ruby $RUBY_VERSION is not installed"
fi

export PATH

# Java
export JAVA_HOME="$HOME/opt/java/bin/java"
export PATH="$HOME/opt/java/bin:$PATH"

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

# Bat Colorscheme
export BAT_THEME="ansi-light"

# Load NVM
declare -a NODE_GLOBALS=(`find ~/.nvm/versions/node -maxdepth 3 -type l -wholename '*/bin/*' | xargs -n1 basename | sort | uniq`)
NODE_GLOBALS+=("node")
NODE_GLOBALS+=("nvm")
load_nvm () {
  export NVM_DIR=~/.nvm
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
}
for cmd in "${NODE_GLOBALS[@]}"; do
  eval "${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} \$@ }"
done

# XDG Config vars
export XDG_CONFIG_HOME=$HOME/.config

# Kubectl autocomplete
source <(k completion zsh)

# Az CLI autocomplete
source '/home/identor/.local/lib/azure-cli/az.completion'

# Source kube aliases
[ -f ~/.kubectl_aliases ] && source ~/.kubectl_aliases

# Set Spaceship ZSH as a prompt
autoload -U promptinit; promptinit
