call plug#begin('~/.vim/plugged')
    Plug 'tpope/vim-sensible'
    Plug 'tpope/vim-fugitive'
    Plug 'ctrlpvim/ctrlp.vim'
    Plug 'dkprice/vim-easygrep'
    Plug 'itchyny/lightline.vim'
    Plug 'mfukar/robotframework-vim'
    Plug 'junegunn/vim-easy-align'
    Plug 'joereynolds/SQHell.vim'
    Plug 'tpope/vim-abolish'
    Plug 'airblade/vim-gitgutter'

    " NERD
    Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
    Plug 'scrooloose/nerdcommenter'
    Plug 'low-ghost/nerdtree-fugitive'

    " JavaScript
    Plug 'pangloss/vim-javascript'
    Plug 'mxw/vim-jsx'
    Plug 'moll/vim-node'
    Plug 'posva/vim-vue'

    " Typescript
    Plug 'leafgarland/typescript-vim'
    Plug 'Quramy/vim-js-pretty-template'
    Plug 'jason0x43/vim-js-indent'

    " Colorscheme
    Plug 'altercation/vim-colors-solarized'

    "Surround
    Plug 'tpope/vim-unimpaired'
    Plug 'tpope/vim-surround'
    Plug 'tpope/vim-repeat'

    "Snippets
    Plug 'MarcWeber/vim-addon-mw-utils'     " Required by snipmate
    Plug 'tomtom/tlib_vim'                  " Required by snipmate
    Plug 'garbas/vim-snipmate'

    "Prettier
    Plug 'prettier/vim-prettier', { 'do': 'yarn install' }

    "Syntax checker
    Plug 'w0rp/ale'
call plug#end()

" Update time
se updatetime=1000

" Set shell
se shell=/bin/zsh

" Set clipboard
se clipboard=unnamed,unnamedplus

" My defaults
se nocompatible mouse=a nowrap relativenumber list ts=4 sw=4 sts=4

" Set temp directory
se backupdir=$HOME/.vimswap directory=$HOME/.vimswap

" Default find settings
se wildignore+=node_modules/** path+=src/** path+=lib/**

" Color settings
let solarized_dir="$HOME/.vim/plugged/vim-colors-solarized"

if has('windows') && !has('unix') && !has('gui_running')
    set bg=dark
    colo torte
elseif isdirectory(expand(solarized_dir))
    " Color scheme
    set t_Co=256
    set bg=dark
    let g:solarized_termcolors = 256
    let g:solarized_termtrans = 1
    let g:solarized_contrast = 'normal'
    let g:solarized_visibility = 'normal'
    colo solarized
endif

" Light line
let g:lightline = {
      \ 'colorscheme': 'solarized',
      \ }

" If gvim
if has('gui_running')
    " Remove toolbars
    set guioptions-=T  "remove toolbar
    set guioptions-=m  "remove menu bar
    set guioptions-=r  "remove right-hand scroll bar
    set guioptions-=L  "remove left-hand scroll bar

    " Set gui font
    if has('unix')
        set guifont=DejaVu\ Sans\ Mono\ 9
        set guifontwide=DejaVu\ Sans\ Mono\ 9
    else
        set guifont=Consolas:h9
    endif
endif

" Ctrlp ignore
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.(git|hg|svn)|(node_modules))$',
  \ 'file': '\v\.(exe|so|dll|zip|gz|rar)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }

let g:ctrlp_user_command = [
  \ '.git/',
  \ 'git --git-dir=%s/.git ls-files -oc --exclude-standard'
  \ ]

" Commenter
let g:NERDSpaceDelims = 1

"
" KEYBINDINGS
"

" Map leader to unused key in normal mode
let mapleader = ' '

" Tab navigation
nnoremap <leader>l                  :tabn<cr>
nnoremap <leader>h                  :tabp<cr>
" Tabonly
nnoremap <leader>to                 :tabo<cr>

" NERDTree
nnoremap <leader>e                  :NERDTreeToggle<cr>
nnoremap <leader>qq                 :qa!<cr>

" Session management

" Add/Save session
nnoremap <leader>sa                 :mksession $HOME/.vim/sessions/
nnoremap <leader>ss                 :mksession! $HOME/.vim/sessions/

" Load session
nnoremap <leader>sl                 :source $HOME/.vim/sessions/

" fugitive key bindings
nnoremap <leader>gs                 :Gstatus<cr>
nnoremap <leader>gc                 :Gcommit<cr>
nnoremap <leader>gpl                :Gpull<cr>
nnoremap <leader>gps                :Gpush<cr>

" Buffer delete
nnoremap <leader>d                  :bd<cr>
nnoremap <C-c>                      <Esc>
imap <C-c>                          <Esc>

" Easy align
nmap ga                             <Plug>(EasyAlign)
xmap ga                             <Plug>(EasyAlign)

